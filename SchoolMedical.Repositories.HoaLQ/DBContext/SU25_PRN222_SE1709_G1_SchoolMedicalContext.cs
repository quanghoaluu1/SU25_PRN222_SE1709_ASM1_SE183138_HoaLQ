// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace SchoolMedical.Repositories.HoaLQ.Models;

public partial class SU25_PRN222_SE1709_G1_SchoolMedicalContext : DbContext
{
    public SU25_PRN222_SE1709_G1_SchoolMedicalContext()
    {
    }

    public SU25_PRN222_SE1709_G1_SchoolMedicalContext(DbContextOptions<SU25_PRN222_SE1709_G1_SchoolMedicalContext> options)
        : base(options)
    {
    }

    public virtual DbSet<BatchHauMpn> BatchHauMpns { get; set; }

    public virtual DbSet<Class> Classes { get; set; }

    public virtual DbSet<HealthCheckConfirmationThienLm> HealthCheckConfirmationThienLms { get; set; }

    public virtual DbSet<HealthCheckRecordThienLm> HealthCheckRecordThienLms { get; set; }

    public virtual DbSet<HealthCheckSessionThienLm> HealthCheckSessionThienLms { get; set; }

    public virtual DbSet<HealthProfilesHoaLq> HealthProfilesHoaLqs { get; set; }

    public virtual DbSet<MedicalIncidentMedicinesDuyTv> MedicalIncidentMedicinesDuyTvs { get; set; }

    public virtual DbSet<MedicalIncidentsDuyTv> MedicalIncidentsDuyTvs { get; set; }

    public virtual DbSet<MedicationOrderTraiNn> MedicationOrderTraiNns { get; set; }

    public virtual DbSet<MedicationTraiNn> MedicationTraiNns { get; set; }

    public virtual DbSet<MedicineHauMpn> MedicineHauMpns { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<StudentsHoaLq> StudentsHoaLqs { get; set; }

    public virtual DbSet<SystemUserAccount> SystemUserAccounts { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<VaccinationConsentFormsTinHt> VaccinationConsentFormsTinHts { get; set; }

    public virtual DbSet<VaccinationRecordsTinHt> VaccinationRecordsTinHts { get; set; }

    public virtual DbSet<VaccineCampaignsTinHt> VaccineCampaignsTinHts { get; set; }

    //     protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    // #warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //         => optionsBuilder.UseSqlServer("Data Source=HOA-PC\\HOA;Initial Catalog=SU25_PRN222_SE1709_G1_SchoolMedical;Persist Security Info=True;User ID=sa;Password=12345;Encrypt=False");

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BatchHauMpn>(entity =>
        {
            entity.HasKey(e => e.BatchHauMpnid).HasName("PK__BatchHau__66B8B84183BA66E2");

            entity.ToTable("BatchHauMPN");

            entity.Property(e => e.BatchHauMpnid)
                .ValueGeneratedNever()
                .HasColumnName("BatchHauMPNId");
            entity.Property(e => e.BatchImportDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Class>(entity =>
        {
            entity.HasKey(e => e.ClassId).HasName("PK__Class__FDF4798665CBD8E0");

            entity.ToTable("Class");

            entity.Property(e => e.ClassId)
                .ValueGeneratedNever()
                .HasColumnName("class_id");
            entity.Property(e => e.ClassName)
                .HasMaxLength(1)
                .HasColumnName("class_name");
        });

        modelBuilder.Entity<HealthCheckConfirmationThienLm>(entity =>
        {
            entity.HasKey(e => e.HealthCheckConfirmationThienLmid).HasName("PK__HealthCh__675B6E3C0D487574");

            entity.ToTable("HealthCheckConfirmationThienLM");

            entity.Property(e => e.HealthCheckConfirmationThienLmid)
                .ValueGeneratedNever()
                .HasColumnName("HealthCheckConfirmationThienLMId");
            entity.Property(e => e.Description).HasMaxLength(1);
            entity.Property(e => e.HealthCheckSessionThienLmid).HasColumnName("HealthCheckSessionThienLMId");
            entity.Property(e => e.SubmitAt).HasColumnType("datetime");

            entity.HasOne(d => d.HealthCheckSessionThienLm).WithMany(p => p.HealthCheckConfirmationThienLms)
                .HasForeignKey(d => d.HealthCheckSessionThienLmid)
                .HasConstraintName("FK__HealthChe__Healt__7D439ABD");

            entity.HasOne(d => d.Parent).WithMany(p => p.HealthCheckConfirmationThienLms)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK__HealthChe__Paren__7B5B524B");

            entity.HasOne(d => d.Student).WithMany(p => p.HealthCheckConfirmationThienLms)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__HealthChe__Stude__7C4F7684");
        });

        modelBuilder.Entity<HealthCheckRecordThienLm>(entity =>
        {
            entity.HasKey(e => e.HealthCheckRecordThienLmid).HasName("PK__HealthCh__6FEBB3C34A76ABE3");

            entity.ToTable("HealthCheckRecordThienLM");

            entity.Property(e => e.HealthCheckRecordThienLmid)
                .ValueGeneratedNever()
                .HasColumnName("HealthCheckRecordThienLMId");
            entity.Property(e => e.CheckedAt).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(1);
            entity.Property(e => e.HealthCheckConfirmationThienLmid).HasColumnName("HealthCheckConfirmationThienLMId");
            entity.Property(e => e.HealthCheckSessionThienLmid).HasColumnName("HealthCheckSessionThienLMId");
            entity.Property(e => e.Height).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.Weight).HasColumnType("decimal(18, 0)");

            entity.HasOne(d => d.HealthCheckConfirmationThienLm).WithMany(p => p.HealthCheckRecordThienLms)
                .HasForeignKey(d => d.HealthCheckConfirmationThienLmid)
                .HasConstraintName("FK__HealthChe__Healt__00200768");

            entity.HasOne(d => d.HealthCheckSessionThienLm).WithMany(p => p.HealthCheckRecordThienLms)
                .HasForeignKey(d => d.HealthCheckSessionThienLmid)
                .HasConstraintName("FK__HealthChe__Healt__7F2BE32F");

            entity.HasOne(d => d.Nurse).WithMany(p => p.HealthCheckRecordThienLms)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__HealthChe__Nurse__01142BA1");

            entity.HasOne(d => d.Student).WithMany(p => p.HealthCheckRecordThienLms)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__HealthChe__Stude__7E37BEF6");
        });

        modelBuilder.Entity<HealthCheckSessionThienLm>(entity =>
        {
            entity.HasKey(e => e.HealthCheckSessionThienLmid).HasName("PK__HealthCh__D59DB1C00EFC07D9");

            entity.ToTable("HealthCheckSessionThienLM");

            entity.Property(e => e.HealthCheckSessionThienLmid)
                .ValueGeneratedNever()
                .HasColumnName("HealthCheckSessionThienLMId");
            entity.Property(e => e.Address).HasMaxLength(1);
            entity.Property(e => e.Description).HasMaxLength(1);
            entity.Property(e => e.EndAt).HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(1);
            entity.Property(e => e.RegistrationEndAt).HasColumnType("datetime");
            entity.Property(e => e.RegistrationStartAt).HasColumnType("datetime");
            entity.Property(e => e.StartAt).HasColumnType("datetime");
        });

        modelBuilder.Entity<HealthProfilesHoaLq>(entity =>
        {
            entity.HasKey(e => e.HealthProfileHoaLqid).HasName("PK__HealthPr__3268839EB9E647B6");

            entity.ToTable("HealthProfilesHoaLQ");

            entity.Property(e => e.HealthProfileHoaLqid)
                .ValueGeneratedNever()
                .HasColumnName("HealthProfileHoaLQID");
            entity.Property(e => e.Allergy)
                .HasMaxLength(1)
                .HasColumnName("allergy");
            entity.Property(e => e.BloodPressure).HasColumnName("blood_pressure");
            entity.Property(e => e.BloodType)
                .HasMaxLength(1)
                .HasColumnName("blood_type");
            entity.Property(e => e.ChronicDisease)
                .HasMaxLength(1)
                .HasColumnName("chronic_disease");
            entity.Property(e => e.CurrentMedical)
                .HasMaxLength(1)
                .HasColumnName("current_medical");
            entity.Property(e => e.DateOfBirth).HasColumnName("date_of_birth");
            entity.Property(e => e.Hearing).HasColumnName("hearing");
            entity.Property(e => e.Height)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("height");
            entity.Property(e => e.MedicalHistory)
                .HasMaxLength(1)
                .HasColumnName("medical_history");
            entity.Property(e => e.Sex).HasColumnName("sex");
            entity.Property(e => e.Sight).HasColumnName("sight");
            entity.Property(e => e.StudentId).HasColumnName("student_id");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("weight");

            entity.HasOne(d => d.Student).WithMany(p => p.HealthProfilesHoaLqs)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__HealthPro__stude__6B24EA82");
        });

        modelBuilder.Entity<MedicalIncidentMedicinesDuyTv>(entity =>
        {
            entity.HasKey(e => e.MedicalIncidentMedicinesDuyTvid).HasName("PK__MedicalI__E65C46E960251696");

            entity.ToTable("MedicalIncidentMedicinesDuyTV");

            entity.Property(e => e.MedicalIncidentMedicinesDuyTvid)
                .ValueGeneratedNever()
                .HasColumnName("MedicalIncidentMedicinesDuyTVId");
            entity.Property(e => e.UsageNote).HasMaxLength(1);

            entity.HasOne(d => d.MedicalIncident).WithMany(p => p.MedicalIncidentMedicinesDuyTvs)
                .HasForeignKey(d => d.MedicalIncidentId)
                .HasConstraintName("FK__MedicalIn__Medic__72C60C4A");

            entity.HasOne(d => d.Medicine).WithMany(p => p.MedicalIncidentMedicinesDuyTvs)
                .HasForeignKey(d => d.MedicineId)
                .HasConstraintName("FK__MedicalIn__Medic__73BA3083");
        });

        modelBuilder.Entity<MedicalIncidentsDuyTv>(entity =>
        {
            entity.HasKey(e => e.MedicalIncidentDuyTvid).HasName("PK__MedicalI__87D4015DAECD85B1");

            entity.ToTable("MedicalIncidentsDuyTV");

            entity.Property(e => e.MedicalIncidentDuyTvid)
                .ValueGeneratedNever()
                .HasColumnName("MedicalIncidentDuyTVId");
            entity.Property(e => e.Diagnosis).HasMaxLength(1);
            entity.Property(e => e.FollowUpNote).HasMaxLength(1);
            entity.Property(e => e.IncidentTime).HasColumnType("datetime");
            entity.Property(e => e.IncidentType).HasMaxLength(1);
            entity.Property(e => e.Symptoms).HasMaxLength(1);
            entity.Property(e => e.Treatment).HasMaxLength(1);

            entity.HasOne(d => d.Nurse).WithMany(p => p.MedicalIncidentsDuyTvs)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__MedicalIn__Nurse__71D1E811");

            entity.HasOne(d => d.Student).WithMany(p => p.MedicalIncidentsDuyTvs)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__MedicalIn__Stude__70DDC3D8");
        });

        modelBuilder.Entity<MedicationOrderTraiNn>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Medicati__3213E83F63FD8999");

            entity.ToTable("MedicationOrderTraiNN");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.CreateAt)
                .HasColumnType("datetime")
                .HasColumnName("createAt");
            entity.Property(e => e.NurseId).HasColumnName("nurse_id");
            entity.Property(e => e.ParentId).HasColumnName("parent_id");
            entity.Property(e => e.Status).HasColumnName("status");
            entity.Property(e => e.StudentId).HasColumnName("student_id");
            entity.Property(e => e.TinhTrang)
                .HasMaxLength(1)
                .HasColumnName("tinh_trang");

            entity.HasOne(d => d.Nurse).WithMany(p => p.MedicationOrderTraiNnNurses)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__Medicatio__nurse__6FE99F9F");

            entity.HasOne(d => d.Parent).WithMany(p => p.MedicationOrderTraiNnParents)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK__Medicatio__paren__6EF57B66");

            entity.HasOne(d => d.Student).WithMany(p => p.MedicationOrderTraiNns)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__Medicatio__stude__6E01572D");
        });

        modelBuilder.Entity<MedicationTraiNn>(entity =>
        {
            entity.HasKey(e => e.MedicationTraiNnid).HasName("PK__Medicati__6EC5F628A8976938");

            entity.ToTable("MedicationTraiNN");

            entity.Property(e => e.MedicationTraiNnid)
                .ValueGeneratedNever()
                .HasColumnName("MedicationTraiNNID");
            entity.Property(e => e.DonguiId).HasColumnName("dongui_id");
            entity.Property(e => e.MedicineName).HasColumnName("medicine_name");
            entity.Property(e => e.NurseNote)
                .HasMaxLength(1)
                .HasColumnName("Nurse_note");
            entity.Property(e => e.ParentNote)
                .HasMaxLength(1)
                .HasColumnName("Parent_note");
            entity.Property(e => e.Quantity).HasColumnName("quantity");
            entity.Property(e => e.ReceiveDate)
                .HasColumnType("datetime")
                .HasColumnName("Receive_date");
            entity.Property(e => e.Status).HasColumnName("status");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasColumnName("type");
            entity.Property(e => e.Unit)
                .HasMaxLength(1)
                .HasColumnName("unit");

            entity.HasOne(d => d.Dongui).WithMany(p => p.MedicationTraiNns)
                .HasForeignKey(d => d.DonguiId)
                .HasConstraintName("FK__Medicatio__dongu__6D0D32F4");
        });

        modelBuilder.Entity<MedicineHauMpn>(entity =>
        {
            entity.HasKey(e => e.MedicineHauMpnid).HasName("PK__Medicine__570EDE00FF5BA4F3");

            entity.ToTable("MedicineHauMPN");

            entity.Property(e => e.MedicineHauMpnid)
                .ValueGeneratedNever()
                .HasColumnName("MedicineHauMPNId");
            entity.Property(e => e.MedicineBatchHauMpnid).HasColumnName("MedicineBatchHauMPNId");
            entity.Property(e => e.MedicineExpirationDate).HasColumnType("datetime");
            entity.Property(e => e.MedicineManufactureDate).HasMaxLength(1);
            entity.Property(e => e.MedicineName).HasMaxLength(1);
            entity.Property(e => e.MedicineType).HasMaxLength(1);
            entity.Property(e => e.MedicineUnit).HasMaxLength(1);
            entity.Property(e => e.MedicineUsageInstructions).HasMaxLength(1);
            entity.Property(e => e.MedicineUsagePurpose).HasMaxLength(1);

            entity.HasOne(d => d.MedicineBatchHauMpn).WithMany(p => p.MedicineHauMpns)
                .HasForeignKey(d => d.MedicineBatchHauMpnid)
                .HasConstraintName("FK__MedicineH__Medic__6C190EBB");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleId).HasName("PK__Role__760965CC3CE331A1");

            entity.ToTable("Role");

            entity.Property(e => e.RoleId)
                .ValueGeneratedNever()
                .HasColumnName("role_id");
            entity.Property(e => e.RoleName)
                .HasMaxLength(1)
                .HasColumnName("role_name");
        });

        modelBuilder.Entity<StudentsHoaLq>(entity =>
        {
            entity.HasKey(e => e.StudentsHoaLqid).HasName("PK__Students__1DB3985E26C4559A");

            entity.ToTable("StudentsHoaLQ");

            entity.Property(e => e.StudentsHoaLqid)
                .ValueGeneratedNever()
                .HasColumnName("StudentsHoaLQId");
            entity.Property(e => e.ClassId).HasColumnName("class_id");
            entity.Property(e => e.SdtNguoigiamho)
                .HasMaxLength(1)
                .HasColumnName("sdt_nguoigiamho");
            entity.Property(e => e.StudentCode)
                .HasMaxLength(1)
                .HasColumnName("student_code");
            entity.Property(e => e.StudentFullName)
                .HasMaxLength(1)
                .HasColumnName("student_fullName");
            entity.Property(e => e.UserId).HasColumnName("user_id");

            entity.HasOne(d => d.Class).WithMany(p => p.StudentsHoaLqs)
                .HasForeignKey(d => d.ClassId)
                .HasConstraintName("FK__StudentsH__class__693CA210");

            entity.HasOne(d => d.User).WithMany(p => p.StudentsHoaLqs)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__StudentsH__user___68487DD7");
        });

        modelBuilder.Entity<SystemUserAccount>(entity =>
        {
            entity.HasKey(e => e.UserAccountId);

            entity.ToTable("System.UserAccount");

            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");
            entity.Property(e => e.ApplicationCode).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasMaxLength(50);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RequestCode).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__User__B9BE370F41022032");

            entity.ToTable("User");

            entity.Property(e => e.UserId)
                .ValueGeneratedNever()
                .HasColumnName("user_id");
            entity.Property(e => e.RoleId).HasColumnName("role_id");
            entity.Property(e => e.UserAccount)
                .HasMaxLength(1)
                .HasColumnName("user_account");
            entity.Property(e => e.UserAddress)
                .HasMaxLength(1)
                .HasColumnName("user_address");
            entity.Property(e => e.UserHashPassword)
                .HasMaxLength(1)
                .HasColumnName("user_hashPassword");
            entity.Property(e => e.UserName)
                .HasMaxLength(1)
                .HasColumnName("user_name");
            entity.Property(e => e.UserPhone)
                .HasMaxLength(1)
                .HasColumnName("user_phone");

            entity.HasOne(d => d.Role).WithMany(p => p.Users)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK__User__role_id__6A30C649");
        });

        modelBuilder.Entity<VaccinationConsentFormsTinHt>(entity =>
        {
            entity.HasKey(e => e.VaccinationConsentFormTinHtid).HasName("PK__Vaccinat__04F552313AE529B0");

            entity.ToTable("VaccinationConsentFormsTinHT");

            entity.Property(e => e.VaccinationConsentFormTinHtid)
                .ValueGeneratedNever()
                .HasColumnName("VaccinationConsentFormTinHTId");
            entity.Property(e => e.Notes).HasMaxLength(1);
            entity.Property(e => e.SubmissionTime).HasColumnType("datetime");

            entity.HasOne(d => d.Parent).WithMany(p => p.VaccinationConsentFormsTinHts)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK__Vaccinati__Paren__74AE54BC");

            entity.HasOne(d => d.Student).WithMany(p => p.VaccinationConsentFormsTinHts)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__Vaccinati__Stude__75A278F5");

            entity.HasOne(d => d.VaccineCampaign).WithMany(p => p.VaccinationConsentFormsTinHts)
                .HasForeignKey(d => d.VaccineCampaignId)
                .HasConstraintName("FK__Vaccinati__Vacci__76969D2E");
        });

        modelBuilder.Entity<VaccinationRecordsTinHt>(entity =>
        {
            entity.HasKey(e => e.VaccinationRecordTinHtid).HasName("PK__Vaccinat__A5DAE21167A4CDC0");

            entity.ToTable("VaccinationRecordsTinHT");

            entity.Property(e => e.VaccinationRecordTinHtid)
                .ValueGeneratedNever()
                .HasColumnName("VaccinationRecordTinHTId");
            entity.Property(e => e.AdverseSymptoms).HasMaxLength(1);
            entity.Property(e => e.PostVaccinationCondition).HasMaxLength(1);
            entity.Property(e => e.PreVaccinationCondition).HasMaxLength(1);
            entity.Property(e => e.VaccinationDateTime).HasColumnType("datetime");
            entity.Property(e => e.VaccineCampaignTinHtid).HasColumnName("VaccineCampaignTinHTId");

            entity.HasOne(d => d.ConsentForm).WithMany(p => p.VaccinationRecordsTinHts)
                .HasForeignKey(d => d.ConsentFormId)
                .HasConstraintName("FK__Vaccinati__Conse__797309D9");

            entity.HasOne(d => d.Nurse).WithMany(p => p.VaccinationRecordsTinHts)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__Vaccinati__Nurse__7A672E12");

            entity.HasOne(d => d.Student).WithMany(p => p.VaccinationRecordsTinHts)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__Vaccinati__Stude__778AC167");

            entity.HasOne(d => d.VaccineCampaignTinHt).WithMany(p => p.VaccinationRecordsTinHts)
                .HasForeignKey(d => d.VaccineCampaignTinHtid)
                .HasConstraintName("FK__Vaccinati__Vacci__787EE5A0");
        });

        modelBuilder.Entity<VaccineCampaignsTinHt>(entity =>
        {
            entity.HasKey(e => e.VaccineCampaignTinHtid).HasName("PK__VaccineC__DC694581720CF4C0");

            entity.ToTable("VaccineCampaignsTinHT");

            entity.Property(e => e.VaccineCampaignTinHtid)
                .ValueGeneratedNever()
                .HasColumnName("VaccineCampaignTinHTId");
            entity.Property(e => e.CampaignDescription).HasMaxLength(1);
            entity.Property(e => e.CampaignName).HasMaxLength(1);
            entity.Property(e => e.EndDateTime).HasColumnType("datetime");
            entity.Property(e => e.Location).HasMaxLength(1);
            entity.Property(e => e.RegistrationEndAt).HasColumnType("datetime");
            entity.Property(e => e.RegistrationStartAt).HasColumnType("datetime");
            entity.Property(e => e.StartDateTime).HasColumnType("datetime");
            entity.Property(e => e.VaccineDescription).HasMaxLength(1);
            entity.Property(e => e.VaccineName).HasMaxLength(1);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}