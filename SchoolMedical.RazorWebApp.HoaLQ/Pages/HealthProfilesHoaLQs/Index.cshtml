@page
@model SchoolMedical.RazorWebApp.HoaLQ.Pages.HealthProfilesHoaLQs.IndexModel

@{
    ViewData["Title"] = "Index";
}
<style>
    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
        transition: background-color 0.3s ease-in-out;
        cursor: alias;
    }
</style>
<h1>Index</h1>
<div class="mb-3">
    <a asp-page="Create" class="btn btn-success"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-shield-fill-plus" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M8 0c-.69 0-1.843.265-2.928.56-1.11.3-2.229.655-2.887.87a1.54 1.54 0 0 0-1.044 1.262c-.596 4.477.787 7.795 2.465 9.99a11.8 11.8 0 0 0 2.517 2.453c.386.273.744.482 1.048.625.28.132.581.24.829.24s.548-.108.829-.24a7 7 0 0 0 1.048-.625 11.8 11.8 0 0 0 2.517-2.453c1.678-2.195 3.061-5.513 2.465-9.99a1.54 1.54 0 0 0-1.044-1.263 63 63 0 0 0-2.887-.87C9.843.266 8.69 0 8 0m-.5 5a.5.5 0 0 1 1 0v1.5H10a.5.5 0 0 1 0 1H8.5V9a.5.5 0 0 1-1 0V7.5H6a.5.5 0 0 1 0-1h1.5z"/>
    </svg> Create New</a>
</div>
        


<table class="table table-bordered table-hover align-middle text-center">
    <thead class="table-light">
    <tr>
        <th>@Html.DisplayNameFor(model => model.HealthProfilesHoaLq[0].Weight)</th>
        <th>@Html.DisplayNameFor(model => model.HealthProfilesHoaLq[0].Height)</th>
        <th>@Html.DisplayNameFor(model => model.HealthProfilesHoaLq[0].Sight)</th>
        <th>@Html.DisplayNameFor(model => model.HealthProfilesHoaLq[0].Hearing)</th>
        <th>@Html.DisplayNameFor(model => model.HealthProfilesHoaLq[0].BloodType)</th>
        <th>@Html.DisplayNameFor(model => model.HealthProfilesHoaLq[0].Sex)</th>
        <th>@Html.DisplayNameFor(model => model.HealthProfilesHoaLq[0].DateOfBirth)</th>
        <th>@Html.DisplayNameFor(model => model.HealthProfilesHoaLq[0].Student)</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody id="HealthProfileId">
    @foreach (var item in Model.HealthProfilesHoaLq)
    {
        <tr id="@item.HealthProfileHoaLqid">
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Height)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hearing)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BloodType)
            </td>
            <td>
                @(item.Sex == true ? "Nam" : "Nữ")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Student.StudentFullName)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.HealthProfileHoaLqid" class="btn btn-sm btn-warning me-1">Edit</a>
                <a asp-page="./Details" asp-route-id="@item.HealthProfileHoaLqid" class="btn btn-sm btn-info text-white me-1">Details</a>
                <a asp-page="./Delete" asp-route-id="@item.HealthProfileHoaLqid" class="btn btn-sm btn-danger">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<script src="~/js/signalr/signalr.js"></script>
<script>
    "use strict";
    
    var connection = new signalR.HubConnectionBuilder().withUrl("/SchoolMedicalHub").build();

    connection.start().then(function () {
        console.log("Connected to the SignalR Hub");
    }).catch(function (err) {
        return console.error(err.toString());
    });

    connection.on("Receiver_DeleteHealthProfile", function (HealthProfileHoaLqid) {
        //alert($(`#${HealthProfileHoaLqid}`).value);
        $('#HealthProfileId').find(`tr[id='${HealthProfileHoaLqid}']`).remove();
    });

    connection.on("Receiver_CreateHealthProfile", function (healthProfile) {
        console.log(healthProfile);
        var sexText = healthProfile.sex ? "Nam" : "Nữ";
        var fullName = healthProfile.student && healthProfile.student.studentFullName
            ? healthProfile.student.studentFullName
            : "Không rõ";
        var newRow = `
        <tr id="${healthProfile.healthProfileHoaLqid}">
            <td>${healthProfile.weight}</td>
            <td>${healthProfile.height}</td>
            <td>${healthProfile.sight}</td>
            <td>${healthProfile.hearing}</td>
            <td>${healthProfile.bloodType}</td>
            <td>${sexText}</td>
            <td>${healthProfile.dateOfBirth}</td>
            <td>${fullName}</td>
            <td>
                <a href="/HealthProfilesHoaLQs/Edit/${healthProfile.healthProfileHoaLqid}" class="btn btn-sm btn-warning me-1">Edit</a>
                <a href="/HealthProfilesHoaLQs/Details/${healthProfile.healthProfileHoaLqid}" class="btn btn-sm btn-info text-white me-1">Details</a>
                <a href="/HealthProfilesHoaLQs/Delete/${healthProfile.healthProfileHoaLqid}" class="btn btn-sm btn-danger">Delete</a>
            </td>
        </tr>
        `;
        $('#HealthProfileId').append(newRow);
    });
    
    connection.on("Receiver_UpdateHealthProfile", function (healthProfile) {
        console.log(healthProfile);
    })
</script>